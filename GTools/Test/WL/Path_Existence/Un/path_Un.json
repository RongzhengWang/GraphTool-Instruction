[
    {
        "id": 0,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(0, 1), (0, 11), (1, 2), (2, 3), (2, 7), (2, 15), (3, 4), (3, 6), (3, 12), (3, 13), (4, 5), (4, 8), (4, 9), (4, 12), (4, 15), (5, 6), (5, 11), (6, 7), (6, 9), (6, 13), (7, 8), (8, 9), (8, 10), (8, 13), (9, 10), (10, 11), (10, 13), (11, 12), (12, 13), (13, 14), (14, 15)]. The task is: you need to Determine whether a route exists between two specific nodes. The nodes in question are: path_source=13 , path_target=11.\n\n### Response:",
        "path": "(13, 11)",
        "answer": true,
        "description": "Determine whether a route exists between two specific nodes."
    },
    {
        "id": 1,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(10, 12), (10, 15), (10, 0), (10, 7), (10, 8), (12, 9), (12, 18), (12, 19), (12, 4), (12, 0), (12, 8), (9, 4), (9, 18), (9, 19), (9, 7), (9, 8), (4, 0), (4, 7), (4, 15), (4, 18), (0, 7), (0, 8), (0, 15), (0, 18), (7, 8), (8, 15), (8, 19), (15, 18), (15, 19), (18, 19), (17, 2), (17, 16), (17, 6), (2, 5), (2, 3), (2, 1), (5, 3), (5, 14), (5, 6), (5, 11), (5, 1), (3, 14), (3, 6), (3, 13), (3, 1), (14, 16), (14, 1), (14, 6), (16, 1), (16, 6), (1, 6), (1, 13), (6, 13), (6, 11), (13, 11)]. The task is: you need to Confirm if a path can be found between two nodes. The nodes in question are: path_source=19 , path_target=5.\n\n### Response:",
        "path": "(19, 5)",
        "answer": false,
        "description": "Confirm if a path can be found between two nodes."
    },
    {
        "id": 2,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(0, 1), (0, 12), (0, 16), (1, 2), (1, 4), (1, 18), (2, 3), (2, 5), (2, 11), (2, 20), (3, 4), (3, 5), (3, 9), (3, 11), (3, 21), (4, 5), (4, 13), (4, 18), (5, 6), (5, 15), (6, 7), (6, 11), (7, 8), (7, 10), (7, 18), (8, 9), (8, 13), (8, 21), (9, 10), (9, 12), (10, 11), (10, 18), (11, 12), (11, 13), (11, 15), (11, 20), (12, 13), (12, 19), (13, 14), (13, 15), (13, 16), (13, 17), (14, 15), (14, 21), (15, 16), (15, 20), (16, 17), (17, 18), (17, 21), (18, 19), (18, 20), (18, 21), (19, 20), (19, 21), (20, 21)]. The task is: you need to Identify whether a path exists linking two nodes. The nodes in question are: path_source=9 , path_target=13.\n\n### Response:",
        "path": "(9, 13)",
        "answer": true,
        "description": "Identify whether a path exists linking two nodes."
    },
    {
        "id": 3,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(6, 15), (6, 19), (6, 8), (6, 23), (6, 10), (6, 9), (15, 19), (15, 23), (15, 8), (15, 0), (15, 2), (15, 5), (19, 8), (19, 20), (19, 2), (19, 10), (19, 5), (8, 23), (8, 10), (8, 2), (23, 0), (23, 10), (23, 18), (0, 2), (0, 20), (0, 9), (2, 10), (2, 20), (2, 18), (2, 9), (10, 20), (10, 9), (20, 18), (20, 5), (18, 5), (18, 9), (5, 9), (22, 1), (22, 21), (22, 11), (22, 13), (22, 17), (1, 21), (1, 3), (1, 11), (1, 7), (1, 14), (1, 13), (1, 17), (21, 4), (21, 12), (21, 16), (21, 13), (21, 17), (4, 3), (4, 11), (4, 14), (4, 16), (3, 11), (3, 7), (3, 12), (3, 14), (11, 7), (11, 12), (7, 12), (7, 13), (12, 14), (12, 13), (12, 17), (14, 16), (16, 13), (13, 17)]. The task is: you need to Identify whether a path exists linking two nodes. The nodes in question are: path_source=9 , path_target=16.\n\n### Response:",
        "path": "(9, 16)",
        "answer": false,
        "description": "Identify whether a path exists linking two nodes."
    },
    {
        "id": 4,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(0, 1), (0, 3), (0, 19), (0, 21), (1, 2), (1, 4), (1, 10), (1, 13), (1, 15), (1, 17), (1, 21), (1, 23), (2, 3), (2, 16), (2, 20), (3, 4), (3, 7), (3, 8), (3, 9), (3, 16), (3, 18), (3, 20), (4, 5), (4, 6), (4, 10), (4, 18), (4, 19), (5, 6), (5, 16), (5, 19), (5, 22), (5, 23), (6, 7), (6, 10), (6, 13), (6, 16), (6, 21), (6, 24), (7, 8), (7, 9), (8, 9), (8, 18), (8, 20), (8, 21), (9, 10), (9, 12), (9, 16), (9, 26), (10, 11), (10, 24), (11, 12), (11, 16), (11, 17), (11, 18), (11, 20), (11, 22), (11, 26), (12, 13), (12, 14), (12, 17), (12, 25), (13, 14), (13, 20), (13, 23), (13, 24), (13, 25), (14, 15), (14, 16), (14, 24), (15, 16), (15, 19), (15, 20), (15, 22), (16, 17), (16, 24), (17, 18), (17, 20), (17, 23), (18, 19), (18, 20), (18, 21), (18, 22), (19, 20), (19, 26), (20, 21), (20, 25), (21, 22), (21, 23), (21, 24), (21, 25), (22, 23), (23, 24), (23, 26), (24, 25), (25, 26)]. The task is: you need to Determine whether a route exists between two specific nodes. The nodes in question are: path_source=3 , path_target=0.\n\n### Response:",
        "path": "(3, 0)",
        "answer": true,
        "description": "Determine whether a route exists between two specific nodes."
    },
    {
        "id": 5,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(12, 22), (12, 20), (12, 23), (12, 6), (12, 8), (12, 11), (12, 2), (22, 1), (22, 6), (22, 8), (22, 0), (22, 11), (22, 19), (1, 6), (1, 8), (1, 20), (1, 2), (1, 17), (1, 19), (1, 0), (6, 8), (6, 20), (6, 23), (6, 19), (6, 0), (8, 0), (8, 26), (8, 20), (8, 17), (8, 19), (0, 26), (0, 23), (26, 11), (26, 23), (26, 2), (26, 17), (26, 19), (11, 20), (11, 23), (11, 2), (20, 23), (20, 2), (20, 17), (23, 2), (2, 17), (2, 19), (17, 19), (16, 15), (16, 24), (16, 7), (16, 5), (16, 14), (15, 21), (15, 25), (15, 7), (15, 3), (15, 10), (15, 13), (21, 7), (21, 25), (21, 24), (21, 5), (21, 3), (21, 18), (21, 9), (7, 5), (7, 18), (7, 25), (7, 24), (7, 14), (7, 9), (7, 13), (5, 3), (5, 24), (5, 14), (5, 13), (5, 4), (3, 18), (3, 4), (3, 24), (3, 13), (18, 25), (18, 4), (18, 10), (18, 14), (18, 9), (25, 4), (25, 10), (25, 14), (25, 9), (25, 13), (4, 10), (4, 24), (4, 14), (10, 24), (10, 14), (24, 14), (24, 9), (14, 9), (14, 13), (9, 13)]. The task is: you need to Check if there is a path between two nodes in the graph. The nodes in question are: path_source=2 , path_target=4.\n\n### Response:",
        "path": "(2, 4)",
        "answer": false,
        "description": "Check if there is a path between two nodes in the graph."
    },
    {
        "id": 6,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(0, 1), (0, 16), (1, 2), (1, 8), (1, 23), (1, 24), (2, 3), (2, 15), (3, 4), (3, 33), (4, 5), (4, 30), (4, 31), (5, 6), (5, 15), (5, 16), (5, 17), (6, 7), (6, 10), (6, 20), (6, 27), (7, 8), (7, 12), (7, 20), (7, 32), (8, 9), (8, 23), (8, 33), (9, 10), (9, 11), (9, 23), (9, 28), (9, 32), (10, 11), (10, 16), (10, 26), (10, 30), (11, 12), (11, 15), (11, 24), (11, 30), (11, 31), (12, 13), (12, 15), (12, 31), (13, 14), (13, 21), (13, 22), (13, 23), (14, 15), (14, 25), (15, 16), (15, 29), (16, 17), (16, 19), (16, 20), (16, 27), (17, 18), (17, 29), (17, 33), (18, 19), (19, 20), (19, 22), (20, 21), (21, 22), (21, 31), (22, 23), (22, 27), (23, 24), (23, 28), (24, 25), (24, 28), (25, 26), (25, 30), (25, 33), (26, 27), (26, 30), (26, 32), (27, 28), (27, 33), (28, 29), (29, 30), (29, 31), (29, 32), (30, 31), (31, 32), (32, 33)]. The task is: you need to Determine whether a route exists between two specific nodes. The nodes in question are: path_source=14 , path_target=20.\n\n### Response:",
        "path": "(14, 20)",
        "answer": true,
        "description": "Determine whether a route exists between two specific nodes."
    },
    {
        "id": 7,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(10, 19), (10, 24), (10, 12), (10, 14), (10, 30), (10, 25), (10, 4), (10, 3), (10, 2), (19, 4), (19, 31), (19, 33), (19, 23), (19, 25), (19, 12), (19, 15), (19, 14), (4, 31), (4, 12), (4, 15), (4, 14), (4, 23), (4, 30), (4, 27), (4, 3), (31, 33), (31, 12), (31, 3), (31, 23), (31, 2), (33, 24), (33, 15), (33, 26), (33, 3), (33, 23), (33, 25), (33, 27), (33, 29), (33, 2), (24, 12), (24, 25), (24, 27), (24, 29), (24, 15), (24, 3), (24, 14), (24, 23), (24, 2), (12, 15), (12, 14), (12, 25), (12, 29), (12, 3), (12, 2), (15, 26), (15, 30), (15, 25), (15, 29), (15, 14), (15, 2), (26, 3), (26, 14), (26, 25), (26, 2), (3, 14), (3, 23), (14, 23), (14, 30), (14, 25), (14, 29), (23, 30), (23, 25), (23, 27), (23, 2), (30, 25), (30, 29), (25, 27), (25, 2), (27, 29), (29, 2), (21, 20), (21, 28), (21, 22), (21, 8), (21, 11), (21, 18), (21, 17), (21, 13), (21, 9), (20, 6), (20, 28), (20, 22), (20, 7), (20, 11), (20, 18), (20, 0), (20, 5), (20, 1), (6, 8), (6, 11), (6, 17), (6, 28), (6, 22), (6, 16), (6, 0), (6, 1), (8, 7), (8, 32), (8, 17), (8, 13), (8, 28), (8, 22), (8, 0), (8, 1), (7, 11), (7, 18), (7, 28), (7, 22), (11, 18), (11, 32), (11, 17), (11, 22), (11, 16), (11, 9), (11, 0), (11, 5), (11, 1), (18, 32), (18, 28), (18, 13), (18, 9), (18, 1), (32, 17), (32, 28), (32, 9), (32, 0), (32, 5), (17, 13), (17, 5), (17, 1), (13, 28), (13, 16), (13, 9), (13, 5), (13, 1), (28, 22), (28, 9), (28, 16), (28, 0), (28, 1), (22, 9), (9, 16), (9, 0), (9, 5), (16, 0), (16, 5), (16, 1), (0, 5), (0, 1), (5, 1)]. The task is: you need to Check if there is a path between two nodes in the graph. The nodes in question are: path_source=24 , path_target=9.\n\n### Response:",
        "path": "(24, 9)",
        "answer": false,
        "description": "Check if there is a path between two nodes in the graph."
    },
    {
        "id": 8,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(0, 1), (0, 9), (0, 13), (0, 16), (0, 21), (0, 32), (1, 2), (1, 3), (1, 13), (1, 17), (1, 20), (1, 21), (2, 3), (2, 10), (2, 20), (2, 35), (3, 4), (3, 11), (3, 20), (3, 30), (3, 32), (3, 36), (4, 5), (4, 8), (4, 15), (4, 23), (5, 6), (5, 9), (5, 16), (5, 25), (5, 33), (6, 7), (6, 13), (6, 14), (6, 28), (7, 8), (7, 13), (7, 22), (7, 28), (7, 32), (7, 34), (8, 9), (8, 14), (8, 16), (8, 17), (8, 19), (8, 20), (8, 25), (8, 35), (9, 10), (9, 24), (9, 28), (10, 11), (10, 27), (11, 12), (11, 20), (11, 22), (11, 23), (12, 13), (12, 22), (12, 34), (13, 14), (13, 30), (14, 15), (14, 28), (14, 36), (15, 16), (15, 17), (15, 20), (16, 17), (16, 19), (16, 30), (17, 18), (17, 22), (18, 19), (18, 21), (18, 27), (18, 33), (19, 20), (19, 30), (19, 35), (20, 21), (20, 23), (20, 33), (21, 22), (21, 28), (22, 23), (23, 24), (23, 36), (24, 25), (24, 31), (24, 36), (25, 26), (25, 27), (26, 27), (27, 28), (28, 29), (29, 30), (30, 31), (30, 33), (31, 32), (32, 33), (33, 34), (34, 35), (35, 36), (35, 37), (36, 37)]. The task is: you need to Identify whether a path exists linking two nodes. The nodes in question are: path_source=0 , path_target=29.\n\n### Response:",
        "path": "(0, 29)",
        "answer": true,
        "description": "Identify whether a path exists linking two nodes."
    },
    {
        "id": 9,
        "prompt": "Below is an instruction that describes a task. Write a response that determines use which API to complete the task.\n\n### Instruction:\nGiven an undirected graph,the edges are: [(2, 10), (2, 17), (2, 31), (2, 26), (2, 18), (2, 37), (2, 5), (2, 19), (2, 15), (2, 14), (2, 16), (2, 29), (2, 13), (2, 9), (2, 7), (10, 17), (10, 31), (10, 26), (10, 23), (10, 19), (10, 15), (10, 16), (10, 13), (10, 7), (17, 31), (17, 34), (17, 23), (17, 37), (17, 19), (17, 30), (17, 15), (17, 14), (17, 16), (17, 13), (17, 9), (17, 7), (31, 34), (31, 18), (31, 23), (31, 19), (31, 15), (31, 16), (31, 29), (31, 13), (31, 30), (31, 7), (34, 26), (34, 18), (34, 23), (34, 5), (34, 15), (34, 14), (34, 16), (34, 29), (34, 9), (26, 18), (26, 29), (26, 5), (26, 15), (26, 14), (26, 13), (26, 9), (18, 23), (18, 19), (18, 29), (18, 5), (18, 14), (18, 13), (23, 37), (23, 29), (23, 19), (23, 14), (23, 16), (23, 9), (23, 7), (37, 5), (37, 30), (37, 9), (37, 7), (5, 19), (5, 29), (5, 13), (5, 30), (5, 9), (5, 7), (19, 15), (19, 29), (19, 30), (19, 16), (19, 13), (19, 7), (15, 14), (15, 16), (15, 29), (15, 30), (15, 13), (15, 9), (15, 7), (14, 16), (14, 13), (14, 7), (16, 29), (16, 13), (16, 7), (29, 13), (29, 7), (13, 30), (13, 9), (13, 7), (30, 9), (30, 7), (9, 7), (12, 24), (12, 21), (12, 35), (12, 25), (12, 33), (12, 20), (12, 28), (12, 27), (12, 11), (12, 3), (12, 6), (24, 4), (24, 35), (24, 25), (24, 33), (24, 36), (24, 28), (24, 27), (24, 11), (24, 1), (4, 21), (4, 8), (4, 32), (4, 11), (4, 22), (4, 35), (4, 25), (4, 20), (4, 36), (4, 28), (4, 3), (21, 8), (21, 33), (21, 36), (21, 11), (21, 1), (21, 0), (21, 3), (21, 6), (8, 32), (8, 11), (8, 22), (8, 35), (8, 36), (8, 28), (8, 27), (8, 1), (8, 6), (32, 11), (32, 33), (32, 36), (32, 1), (32, 0), (32, 25), (32, 3), (32, 27), (11, 22), (11, 25), (11, 33), (11, 20), (11, 36), (11, 28), (11, 27), (11, 1), (11, 0), (22, 1), (22, 35), (22, 36), (22, 28), (22, 27), (22, 3), (22, 20), (1, 35), (1, 33), (1, 36), (1, 6), (35, 0), (35, 25), (35, 3), (35, 20), (35, 6), (35, 27), (0, 25), (0, 3), (0, 20), (0, 36), (0, 28), (0, 6), (25, 3), (25, 36), (25, 28), (25, 20), (3, 33), (3, 20), (3, 28), (3, 6), (33, 20), (33, 36), (33, 28), (33, 6), (33, 27), (20, 36), (20, 28), (36, 28), (36, 27), (28, 6), (28, 27), (6, 27)]. The task is: you need to Determine whether a route exists between two specific nodes. The nodes in question are: path_source=34 , path_target=35.\n\n### Response:",
        "path": "(34, 35)",
        "answer": false,
        "description": "Determine whether a route exists between two specific nodes."
    }
]